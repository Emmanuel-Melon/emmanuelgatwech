{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_contact_module_css__WEBPACK_IMPORTED_MODULE_1__","_components_contact_module_css__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","ContactPage","a","createElement","title","keywords","className","contactStyles","content","leftPane","form","method","action","user","label","type","placeholder","id","name","subject","cols","rows","message","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","borderBottom","boxShadow","margin","maxWidth","padding","display","justifyContent","gatsby_browser_entry","to","color","textDecoration","alignItems","Layout","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-contact-js-11dc50fc5ea0d1bafe6f.js","sourcesContent":["import React from \"react\"\nimport contactStyles from '../components/contact.module.css'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst ContactPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Projects\" keywords={[`gatsby`, `application`, `react`]} />\n      <h1>About</h1>\n      <p>\n        I'm a very laid back fella, I respond quickly but don't bother\n        contacting me on weekends.\n      </p>\n      <div className={contactStyles.content}>\n        <div className={contactStyles.leftPane}>\n          <h3>Leave a Message</h3>\n          <form className={contactStyles.form} method=\"post\" action=\"https://formspree.io/mzbdqweb\">\n            <div className={contactStyles.user}>\n                <label className={contactStyles.label}>\n                  Name\n                  <input type=\"text\" placeholder=\"Name\" id=\"Name\" name=\"name\" />\n                </label>\n                <label className={contactStyles.label}>\n                  Email\n                  <input type=\"text\" placeholder=\"Email Address\"  id=\"Email Address\" name=\"_replyto\"/>\n                </label>\n            </div>\n            <div>\n              <label className={contactStyles.label}>\n                Subject\n                <input type=\"text\" placeholder=\"Subject\" id=\"subject\" className={contactStyles.subject} name=\"subject\" />\n              </label>\n              <label className={contactStyles.label}>\n                Message\n                <textarea id=\"message\" placeholder=\"Your Message\" cols=\"30\" rows=\"5\" className={contactStyles.message} name=\"message\" />\n              </label>\n            </div>\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default ContactPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n      borderBottom: `solid 0.1em #333`,\n      boxShadow: `0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1024,\n        padding: `1.5rem`,\n        display: `flex`,\n        justifyContent: `space-between`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `#333`,\n            textDecoration: `underline`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div style={{ display: `flex`, alignItems: `center` }}>\n        <Link to=\"/projects/\"> Projects</Link>\n        <Link to=\"/contact/\">Contact</Link>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}