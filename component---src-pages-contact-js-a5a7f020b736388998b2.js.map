{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_contact_module_css__WEBPACK_IMPORTED_MODULE_1__","_components_contact_module_css__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","ContactPage","a","createElement","title","keywords","className","contactStyles","content","leftPane","form","method","action","user","label","type","placeholder","id","name","subject","cols","rows","message","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","siteTitle","react_default","style","background","marginBottom","borderBottom","boxShadow","margin","maxWidth","padding","display","justifyContent","gatsby_browser_entry","to","color","textDecoration","alignItems","AniLink_default","Layout","children","query","render","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-contact-js-a5a7f020b736388998b2.js","sourcesContent":["import React from \"react\"\nimport contactStyles from '../components/contact.module.css'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst ContactPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Projects\" keywords={[`Emmanuel Daniel`, `Emmanuel Gatwech`, `react`, `Node.js`, `Eman`, `Junubiman`, `South Sudan`, `Juba`, `Software Engineer`]} />\n      <h1>Contact Me</h1>\n      <p>\n        Let's have a little chat\n      </p>\n      <div className={contactStyles.content}>\n        <div className={contactStyles.leftPane}>\n          <h3>Leave a Message</h3>\n          <form className={contactStyles.form} method=\"post\" action=\"https://formspree.io/mzbdqweb\">\n            <div className={contactStyles.user}>\n                <label className={contactStyles.label}>\n                  Name\n                  <input type=\"text\" placeholder=\"Name\" id=\"Name\" name=\"name\" />\n                </label>\n                <label className={contactStyles.label}>\n                  Email\n                  <input type=\"text\" placeholder=\"Email Address\"  id=\"Email Address\" name=\"_replyto\"/>\n                </label>\n            </div>\n            <div>\n              <label className={contactStyles.label}>\n                Subject\n                <input type=\"text\" placeholder=\"Subject\" id=\"subject\" className={contactStyles.subject} name=\"subject\" />\n              </label>\n              <label className={contactStyles.label}>\n                Message\n                <textarea id=\"message\" placeholder=\"Your Message\" cols=\"30\" rows=\"5\" className={contactStyles.message} name=\"message\" />\n              </label>\n            </div>\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default ContactPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n      borderBottom: `solid 0.1em #333`,\n      boxShadow: `0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1024,\n        padding: `1.5rem`,\n        display: `flex`,\n        justifyContent: `space-between`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `#333`,\n            textDecoration: `underline`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div style={{ display: `flex`, alignItems: `center` }}>\n        <AniLink to=\"/projects/\"> Projects</AniLink>\n        <Link to=\"/blog/\">Blog</Link>\n        <Link to=\"/contact/\">Contact</Link>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}